# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FEE6rb5nih_T90RA8SjzZsOAQJIu5e3L
"""

import requests
import pandas as pd
import matplotlib.pyplot as plt

# Fetching data from the World Bank API
url = 'http://api.worldbank.org/v2/country/all/indicator/SP.POP.TOTL?date=2019&format=json'
response = requests.get(url)
data = response.json()

# Extracting data from the response
records = []
for entry in data[1]:
    country_iso3 = entry['countryiso3code']
    country_name = entry['country']['value']
    population = entry['value']
    records.append((country_iso3, country_name, population))

# Creating DataFrame from extracted records
df = pd.DataFrame(records, columns=['Country Code', 'Country Name', 'Population'])

# Cleaning up DataFrame
df['Population'] = pd.to_numeric(df['Population'], errors='coerce')  # Convert population to numeric
df.dropna(subset=['Population'], inplace=True)  # Drop rows with missing population data

# Sorting data for visualization
df_sorted = df.sort_values(by='Population', ascending=False).head(20)

# Plotting
plt.figure(figsize=(12, 8))
plt.barh(df_sorted['Country Name'], df_sorted['Population'], color='skyblue')
plt.xlabel('Population')
plt.title('Top 20 Countries by Population (2019)')
plt.gca().invert_yaxis()  # Invert y-axis to have highest population at the top
plt.show()

import requests
import pandas as pd
import matplotlib.pyplot as plt

# Fetching data from the World Bank API
url = 'http://api.worldbank.org/v2/country/all/indicator/SP.POP.TOTL?date=2019&format=json'
response = requests.get(url)
data = response.json()

# Extracting data from the response
records = []
for entry in data[1]:
    country_iso3 = entry['countryiso3code']
    country_name = entry['country']['value']
    population = entry['value']
    records.append((country_iso3, country_name, population))

# Creating DataFrame from extracted records
df = pd.DataFrame(records, columns=['Country Code', 'Country Name', 'Population'])

# Cleaning up DataFrame
df['Population'] = pd.to_numeric(df['Population'], errors='coerce')  # Convert population to numeric
df.dropna(subset=['Population'], inplace=True)  # Drop rows with missing population data

# Sort data by population for better visualization
df_sorted = df.sort_values(by='Population', ascending=False).head(20)

# Plotting
plt.figure(figsize=(12, 8))
plt.barh(df_sorted['Country Name'], df_sorted['Population'], color='skyblue')
plt.xlabel('Population')
plt.title('Top 20 Countries by Population (2019)')
plt.gca().invert_yaxis()  # Invert y-axis to have highest population at the top
plt.show()